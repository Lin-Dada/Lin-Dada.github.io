I"2<blockquote>
  <p>本文介绍了一些测试网站是否存在SQL注入漏洞的技巧，总结了几种SQL注入方式（如：Union注入、布尔注入、报错注入、时间注入、宽字节注入等），并介绍了一些简单的绕过方式。</p>
</blockquote>

<h4 id="sql注入介绍">SQL注入介绍</h4>
<p>SQL注入是指Web应用对用户输入的数据过滤不严，使得从前端传入后端的参数是攻击者可控的，并且参数带进了数据库查询。攻击者可以利用SQL注入漏洞，通过构造不同的payload来实现对数据库的任意操作。</p>

<p>存在SQL注入的两个前提：</p>
<ul>
  <li>参数是用户可控的</li>
  <li>参数会被带进数据库查询</li>
</ul>

<p>以常用的SQL查询语句为例：
<code class="highlighter-rouge">select * from user where id = '$_GET['id']'</code>
在这个查询语句中，<code class="highlighter-rouge">$_GET['id']</code>是PHP通过GET请求接收的用户所输入的数据，被带到SQL数据库进行查询，当id为不同的值时，服务器将返回不同的内容。
如果用户输入的是一段SQL语句，则这段语句也将会被带进来查询，从而实现了SQL注入。比如用户输入的id数据为：<code class="highlighter-rouge">1' or 1=1# '</code>，查询语句将变为：
<code class="highlighter-rouge">select * from user where id = '1' or 1=1# ''</code>
该语句将返回所有的查询结果</p>

<p>上面#号是SQL中的注释符类似的还有<code class="highlighter-rouge">-- </code>，<code class="highlighter-rouge">/**/</code></p>
:ET